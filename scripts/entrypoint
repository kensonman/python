#!/bin/bash
#
# The entrypoint of the container.

CWD="/usr/src/app"
REQUIREMENTS=${REQUIREMENTS:-/usr/src/app/requirements.txt}
STARTUP=${STARTUP:-/usr/src/app/prerequirements.sh}
USERID=theuser

create()
{
   APPNAME=${2:-app}
   TMP_REQUIREMENTS=_requirements.txt
   echo "Going to create the django app<${APPNAME}>..."

   #Change current working directory
   cd $CWD

   #Install the django
   pip install django

   #Creating conf
   if [ ! -f "manage.py" ]; then
      echo "Going to create the django project<conf>..."
      django-admin startproject conf
      mv conf/conf/* conf/
      rmdir conf/conf
      mv conf/manage.py .
   fi

   #Creating app
   django-admin startapp ${APPNAME}
   sed -i "/MIDDLEWARE/iINSTALLED_APPS+=['${APPNAME}',]" conf/settings.py 

   #Set user
   chown -R ${USERID} ${CWD}

   #Create the basic requirements.txt
   pip freeze > $TMP_REQUIREMENTS

   #Merging requirements.txt
   while read l; do
      pkg=`echo $l | grep -o "^.*=="`
      pkg=${pkg::-2}
      sed -i "s/${pkg}==.*/${l}/g" ${REQUIREMENTS}
      sed -i "s/${pkg}\s*/${l}/g" ${REQUIREMENTS}
   done < $TMP_REQUIREMENTS
   rm $TMP_REQUIREMENTS
}

# Init the django environments
init()
{
   echo "Initiate the container ..." 

   if [ -f ${STARTUP} ]; then
      echo "Going to execute [${STARTUP}] in container..."
      chmod +x ${STARTUP}
      ${STARTUP}
   fi

   if [ -f ${REQUIREMENTS} ]; then
      echo "Going to init the container..."
      pip install -r ${REQUIREMENTS}
      pip freeze > ${REQUIREMENTS}
   fi
}

makemigrations()
{
   init
   APPNAME=${2:-app}
   echo "Going to making migrations in project<${APPNAME}>..."
   cd ${CWD}

   ./manage.py makemigrations ${APPNAME}
   chown -R ${USERID} ${APPNAME}/migrations 
}

makemessages()
{
   init
   APPNAME=${2:-app}
   LANG=${3:-all}
   echo "Going to makeing messages<${LANG}> in project<${APPNAME}>..."
   cd ${CWD}
   cd ${APPNAME}

   # Create the locale directory
   if [ ! -d "locale" ]; then
      mkdir locale
      chown -R ${USERID} locale
   fi

   if [ "${LANG}" == "all" ]; then
      ../manage.py makemessages
   else
      ../manage.py makemessages -l ${LANG}
   fi
   chown -R ${USERID} locale 
}

compilemessages()
{
   init
   APPNAME=${2:-app}
   echo "Going to compile messages in project<${APPNAME}>..."
   cd ${CWD}
   cd ${APPNAME}

   ../manage.py compilemessages
   chown -R ${USERID} locale
}

run()
{
   init
   echo "Going to execute the Django testing server ...."
   ADDR=${2:-"0.0.0.0:8000"}
   cd ${CWD}

   sudo chown -R ${USERID} logs
   sudo chmod -R +w logs
   sudo -E -u ${USERID} ./manage.py runserver ${ADDR}
}

cmd()
{
   init
   echo "Going to execute the Django command...."
   cd ${CWD}

   sudo -E -u ${USERID} ./manage.py ${*:2}
}

printhelp()
{
   echo "This entrypoint support belows commands:"
   echo "  create           - Create a Django project;"
   echo "    Usage: create <AppName>"
   echo "  init             - Init the Django environment and install the dependencies;"
   echo "    Usage: init"
   echo "  makemigrations   - Make the migrations by django command;"
   echo "    Usage: makemigrations <AppName>"
   echo "  makemessages     - Make the specify translation by django command;"
   echo "    Usage: makemessages <AppName> [LangCode|default:zh_hant]"
   echo "  compilemessages  - Compile the specify translation by django command;"
   echo "    Usage: compilemessages <AppName>"
   echo "  run              - Execute the testing server"
   echo "    Usage: run [Addr|default:\"0.0.0.0:8000\"]"
   echo "  exec             - Execute the specific Django command by prepend ./manage.py"
   echo "    Usage: exec <cmd>"
   echo "  help             - Print this help message"
   echo "    Usage: help"
}


case "$1" in
   create)
      create "$@"
      ;;
   init)
      init "$@"
      ;;
   makemigrations)
      makemigrations "$@"
      ;;
   makemessages)
      makemessages "$@"
      ;;
   compilemessages)
      compilemessages "$@"
      ;;
   run)
      run "$@"
      ;;
   exec)
      cmd "$@"
      ;;
   help)
      printhelp
      ;;
   *)
      echo "Executing runtime command \"$@\"..."
      exec "$@"
esac
